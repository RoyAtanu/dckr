name: Build Executables

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          pip3 install -r requirements.txt

      - name: Build and Package Linux Executable
        run: |
          pyinstaller --onefile --console dckr/dckr.py
          cp releasenotes.md dist
          cd dist/ && tar -czvf ../dckr_v0.${{ github.run_number }}_linux.tar.gz . && cd ..
          ls -l dckr_v0.${{ github.run_number }}_linux.tar.gz

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v0.${{ github.run_number }}
          release_name: v0.${{ github.run_number }}
          body_path: ./releasenotes.md
          draft: false
          prerelease: true

      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: ./dckr_v0.${{ github.run_number }}_linux.tar.gz
          asset_name: dckr_v0.${{ github.run_number }}_linux.tar.gz
          asset_content_type: application/zip
